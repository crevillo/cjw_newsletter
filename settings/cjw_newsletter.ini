#?ini charset="utf-8"?
# cjw_newsletter.ini contains settings for the newsletter

[NewsletterSettings]

# NodeId of container where the system is looking for newsletter systems
RootFolderNodeId=1

# which is the command to exex php cli scripts
PhpCli=php

# array with all skin names located in design folder
# => design:newsletter/skin/ $skin_name

AvailableSkinArray[]=default


[NewsletterMailSettings]

# smtp, sendmail, file

# newsletter
TransportMethodCronjob=file

# test newsletter
TransportMethodPreview=sendmail

# subscribe, infomail
TransportMethodDirectly=file

# where to store mails send by TransportMethod = file
FileTransportMailDir=var/log/mail

# http://ezcomponents.org/docs/api/latest/introduction_Mail.html#mta-qmail
# HeaderLineEnding
#    auto - try to find correct settings
#           default is LF
#    CRLF - windows - \r\n
#    CR   - mac - \r
#    LF   - UNIX-MACOSX - \n
HeaderLineEnding=auto

# Configuration for SMTP
SmtpTransportServer=
SmtpTransportPort=25
SmtpTransportUser=
SmtpTransportPassword=
# Connection type in SMTP: <empty>(no encryption)|ssl|sslv2|sslv3|tls
SmtpTransportConnectionType=

# settings for mail send out by subscribe, unsubscribe
EmailSender=newsletter@example.com
EmailSenderName=Example Newsletter Sender

# string the subject of all mails is starting with
EmailSubjectPrefix=[Newsletter example.com]

# enabled | disabled - if enabled all local images will be include to the mail message
ImageInclude=disabled

[BounceSettings]
# when we should nl user status to bounced?
BounceThresholdValue=3

[DebugSettings]
# Debug=enabled|disabled get more log output e.g. bounce parser
Debug=disabled

[NewsletterUserSettings]
# if disabled nl_user.name is created with default schema
# saluation first_name last_name
# if enabled the tpl design:newsletter/user/name.tpl will be used
UseTplForNameGeneration=disabled

# define which salutations are available
# mapping of nl_user.salutation (int) to english string
# this string is used for i18n
# SalutationMappingArray[value_{$salutationid}]={i18n english string}
# i18n( {i18n english string}, 'cjw_newsletter/user/salutation' )
SalutationMappingArray[value_1]=Mr
SalutationMappingArray[value_2]=Ms

[NewsletterCSVSettings]
# define which fields are included in the csv, 
# so you can import birthdays or other things 
# depending on your needs
# just comment or uncomment those you want
Fields[]
Fields[]=email
Fields[]=first_name
Fields[]=last_name
Fields[]=salutation
#Fields[]=organisation
#Fields[]=birthday
#Fields[]=data_xml
#Fields[]=note
#Fields[]=data_text

# show some examples lines for the data import
Examples[]
Examples[]=user3@example.com;Julia;Mustermann;2
Examples[]=user4@example.com;Max;Mustermann;1

# for each field we define some data, like label and default value
# Label value is used for i18n
[NewsletterCSVField_email]
Label=E-mail
Default=

[NewsletterCSVField_first_name]
Label=First Name
Default=

[NewsletterCSVField_last_name]
Label=Last Name
Default=

[NewsletterCSVField_salutation]
Label=Salutation
Default=0

#[NewsletterCSVField_organisation]
#Label=Organisation
#Default=''

#[NewsletterCSVField_birthday]
#Label=Birthday
#Default=''

#[NewsletterCSVField_data_xml]
#Label=Data XML
#Default=''

#[NewsletterCSVField_note]
#Label=Note
#Default=''

#[NewsletterCSVField_data_text]
#Label=Data Text
#Default=''
